# use refinment and define the refiner to use
 analysis.algorithm.CEGAR                 = false

# ARGCPA is needed for counterexample analysis
 cpa = cpa.arg.ARGCPA
 ARGCPA.cpa              = cpa.composite.CompositeCPA
 CompositeCPA.cpas       = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.constraints.ConstraintsCPA, cpa.value.ValueAnalysisCPA, cpa.loop.LoopAnalysisCPA

 log.consoleLevel = WARNING

 output.disable = false
 
 cpa.value.symbolic.useSymbolicValues = true
# cpa.predicate.encodeBitvectorAs = Bitvector

 analysis.traversal.order = bfs
 analysis.checkCounterexamples = false
 cpa.loop.maxLoopIterations = 1
 cpa.value.symbolic.handleArrays = true
 cpa.arg.errorPath.export = false
 cpa.arg.export = true
